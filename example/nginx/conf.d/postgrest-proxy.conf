server {
  listen 0.0.0.0:8080;

  location /login {
    if ($request_method = POST ) {
      content_by_lua_block {
        ngx.req.read_body()

        local res = ngx.location.capture("/rpc/login",
          { method = ngx.HTTP_POST,
            always_forward_body = true,
            copy_all_vars = true
          }
        )

        ngx.header["Access-Control-Allow-Origin"] = "http://localhost:3000";
        ngx.header["Access-Control-Allow-Credentials"] = "true";

        if res.status == 200 then
          local cjson = require("cjson")
          local json = cjson.decode(res.body)
          local cookie_params = "; HttpOnly;"

          ngx.header["Set-Cookie"] =
            "access_token=" .. json.token .. cookie_params

          ngx.say("{}")
        else
          ngx.status = res.status
          ngx.header["Content-Type"] = "application/json; charset=utf-8"
          ngx.say(res.body)
        end

        return
      }
    }

    proxy_pass http://postgrest:3000;
  }

  location /rpc/login {
    proxy_pass http://postgrest:3000;
  }

  location / {
    rewrite_by_lua_block {
      local cookie_value = ngx.req.get_headers()["Cookie"]

      if cookie_value ~= nil then
        local jwt = cookie_value:match("access_token=([^ ;]+)")

        if jwt ~= nil then
           ngx.req.set_header("Authorization", "Bearer " .. jwt)
        end
      end

      ngx.req.clear_header("Cookie")
    }

    header_filter_by_lua_block {
      ngx.header["Access-Control-Allow-Origin"] = "http://localhost:3000";
      ngx.header["Access-Control-Allow-Credentials"] = "true";
    }

    proxy_pass http://postgrest:3000;
  }
}